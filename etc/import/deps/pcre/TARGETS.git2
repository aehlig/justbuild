{ "config.h":
  { "type": "file_gen"
  , "arguments_config": ["OS"]
  , "name": "config.h"
  , "data":
    { "type": "let*"
    , "bindings":
      [ ["SUPPORT_PCRE8", 1]
      , ["PCRE_LINK_SIZE", "2"]
      , ["PCRE_PARENS_NEST_LIMIT", "250"]
      , ["PCRE_MATCH_LIMIT", "10000000"]
      , ["PCRE_MATCH_LIMIT_RECURSION", "MATCH_LIMIT"]
      , ["PCRE_NEWLINE", "LF"]
      , ["NO_RECURSE", 1]
      , ["PCRE_POSIX_MALLOC_THRESHOLD", "10"]
      , ["BSR_ANYCRLF", 0]
      ]
    , "body":
      { "type": "join"
      , "separator": "\n"
      , "$1":
        { "type": "++"
        , "$1":
          [ [ "#define HAVE_STDINT_H 1"
            , "#define HAVE_INTTYPES_H 1"
            , "#define HAVE_INTTYPES_H 1"
            ]
          , { "type": "case"
            , "expr": {"type": "var", "name": "OS"}
            , "case": {"windows": ["#define HAVE_WINDOWS_H 1"]}
            , "default":
              [ "#define HAVE_UNISTD_H 1"
              , "#define HAVE_DIRENT_H 1"
              , "#define HAVE_SYS_STAT_H 1"
              , "#define HAVE_SYS_TYPES_H 1"
              ]
            }
          , [ "#define HAVE_MEMMOVE_H 1"
            , "#define HAVE_STRERROR_H 1"
            , "#define HAVE_STRTOLL_H 1"
            ]
          , { "type": "case"
            , "expr": {"type": "var", "name": "OS"}
            , "case": {"windows": ["#define HAVE__STRTOI64_H 1"]}
            , "default":
              [ "#define HAVE_BCOPY_H 1"
              , "#define HAVE_STRTOQ_H 1"
              ]
            }
          , [ "#define HAVE_LONG_LONG 1"
            , "#define HAVE_UNSIGNED_LONG_LONG 1"
            ]
          , { "type": "if"
            , "cond": {"type": "var", "name": "PCRE_STATIC"}
            , "then": ["#define PCRE_STATIC 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_PCRE8"}
            , "then": ["#define SUPPORT_PCRE8 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_PCRE16"}
            , "then": ["#define SUPPORT_PCRE16 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_PCRE32"}
            , "then": ["#define SUPPORT_PCRE32 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_JIT"}
            , "then": ["#define SUPPORT_JIT 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_PCREGREP_JIT"}
            , "then": ["#define SUPPORT_PCREGREP_JIT 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_UTF"}
            , "then": ["#define SUPPORT_UTF 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_UCP"}
            , "then": ["#define SUPPORT_UCP 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "EBCDIC"}
            , "then": ["#define EBCDIC 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "EBCDIC_NL25"}
            , "then": ["#define EBCDIC_NL25 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "BSR_ANYCRLF"}
            , "then": ["#define BSR_ANYCRLF 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "NO_RECURSE"}
            , "then": ["#define NO_RECURSE 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_LIBBZ2"}
            , "then": ["#define SUPPORT_LIBBZ2 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_LIBZ"}
            , "then": ["#define SUPPORT_LIBZ 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_LIBEDIT"}
            , "then": ["#define SUPPORT_LIBEDIT 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_LIBREADLINE"}
            , "then": ["#define SUPPORT_LIBREADLINE 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_VALGRIND"}
            , "then": ["#define SUPPORT_VALGRIND 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "SUPPORT_GCOV"}
            , "then": ["#define SUPPORT_GCOV 1"]
            }
          , { "type": "case"
            , "expr": {"type": "var", "name": "PCRE_NEWLINE"}
            , "case":
              { "LF": ["#define NEWLINE 10"]
              , "CR": ["#define NEWLINE 13"]
              , "CRLF": ["#define NEWLINE 3338"]
              , "ANY": ["#define NEWLINE -1"]
              , "ANYCRLF": ["#define NEWLINE -2"]
              }
            , "default":
              { "type": "fail"
              , "msg": "Unsupported value of PCRE_NEWLINE variable"
              }
            }
          , [ { "type": "join"
              , "$1":
                [ "#define POSIX_MALLOC_THRESHOLD "
                , {"type": "var", "name": "PCRE_POSIX_MALLOC_THRESHOLD"}
                ]
              }
            , { "type": "join"
              , "$1":
                [ "#define LINK_SIZE "
                , {"type": "var", "name": "PCRE_LINK_SIZE"}
                ]
              }
            , { "type": "join"
              , "$1":
                [ "#define PARENS_NEST_LIMIT "
                , {"type": "var", "name": "PCRE_PARENS_NEST_LIMIT"}
                ]
              }
            , { "type": "join"
              , "$1":
                [ "#define MATCH_LIMIT "
                , {"type": "var", "name": "PCRE_MATCH_LIMIT"}
                ]
              }
            , { "type": "join"
              , "$1":
                [ "#define MATCH_LIMIT_RECURSION "
                , {"type": "var", "name": "PCRE_MATCH_LIMIT_RECURSION"}
                ]
              }
            , { "type": "join"
              , "$1":
                [ "#define PCREGREP_BUFSIZE "
                , {"type": "var", "name": "PCREGREP_BUFSIZE", "default": ""}
                ]
              }
            ]
          , [ "#define MAX_NAME_SIZE 32"
            , "#define MAX_NAME_COUNT 10000"
            ]
          ]
        }
      }
    }
  }
, "git2_pcreposix_sources":
  { "type": "install"
  , "deps": ["pcreposix.c"]
  }
, "git2_pcreposix_headers":
  { "type": "install"
  , "deps": ["pcreposix.h"]
  }
, "git2_pcre_sources":
  { "type": "install"
  , "deps":
    [ "pcre_byte_order.c"
    , "pcre_chartables.c"
    , "pcre_compile.c"
    , "pcre_config.c"
    , "pcre_dfa_exec.c"
    , "pcre_exec.c"
    , "pcre_fullinfo.c"
    , "pcre_get.c"
    , "pcre_globals.c"
    , "pcre_jit_compile.c"
    , "pcre_maketables.c"
    , "pcre_newline.c"
    , "pcre_ord2utf8.c"
    , "pcre_refcount.c"
    , "pcre_string_utils.c"
    , "pcre_study.c"
    , "pcre_tables.c"
    , "pcre_ucd.c"
    , "pcre_valid_utf8.c"
    , "pcre_version.c"
    , "pcre_xclass.c"
    , "git2_pcreposix_sources"
    ]
  }
, "git2_pcre_headers":
  { "type": "install"
  , "deps":
    [ "config.h"
    , "pcre.h"
    , "pcre_internal.h"
    , "ucp.h"
    , "git2_pcreposix_headers"
    ]
  }
, "git2_pcre":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS"]
  , "name": ["git2_pcre"]
  , "pure C": ["yes"]
  , "local defines":
    { "type": "++"
    , "$1":
      [ ["HAVE_CONFIG_H"]
      , { "type": "case"
        , "expr": {"type": "var", "name": "OS"}
        , "case":
          {"windows": ["_CRT_SECURE_NO_DEPRECATE", "_CRT_SECURE_NO_WARNINGS"]}
        }
      ]
    }
  , "srcs": ["git2_pcre_sources"]
  , "hdrs": ["git2_pcre_headers"]
  }
}
