{ "git2/sys/features.h":
  { "type": "file_gen"
  , "arguments_config":
    [ "OS"
    , "ARCH"
    , "TARGET_ARCH"
    , "DEBUG_POOL"
    , "ENABLE_TRACE"
    , "THREADSAFE"
    , "USE_ICONV"
    , "USE_NSEC"
    , "REGEX_BACKEND"
    , "USE_SSH"
    , "USE_NTLMCLIENT"
    , "USE_GSSAPI"
    , "USE_SHA1"
    , "USE_HTTPS"
    , "WINHTTP"
    ]
  , "name": "git2/sys/features.h"
  , "data":
    { "type": "let*"
    , "bindings":
      [ [ "THREADSAFE", {"type": "var", "name": "THREADSAFE", "default": true}]
      , [ "ENABLE_TRACE"
        , {"type": "var", "name": "ENABLE_TRACE", "default": true}
        ]
      , [ "USE_SSH", {"type": "var", "name": "USE_SSH", "default": true}]
      , [ "WINHTTP"
        , { "type": "var"
          , "name": "WINHTTP"
          , "default":
            {"type": "==", "$1": {"type": "var", "name": "OS"}, "$2": "windows"}
          }
        ]
      , [ "USE_HTTPS"
        , { "type": "case*"
          , "expr": {"type": "var", "name": "USE_HTTPS", "default": true}
          , "case":
            [ [ true
              , { "type": "case*"
                , "expr": {"type": "var", "name": "OS"}
                , "case":
                  [ [ "windows"
                    , { "type": "if"
                      , "cond": {"type": "var", "name": "WINHTTP"}
                      , "then": "WinHTTP"
                      , "else": true
                      }
                    ]
                  ]
                , "default": true
                }
              ]
            ]
          , "default": {"type": "var", "name": "USE_HTTPS"}
          }
        ]
      , [ "USE_GSSAPI"
        , { "type": "case*"
          , "expr": {"type": "var", "name": "USE_GSSAPI", "default": true}
          , "case":
            [ [ true
              , { "type": "case*"
                , "expr": {"type": "var", "name": "OS"}
                , "case": [["darwin", "GSS.framework"]]
                , "default": "gssapi"
                }
              ]
            ]
          , "default": {"type": "var", "name": "USE_GSSAPI"}
          }
        ]
      , [ "USE_SHA1",
          { "type": "case*"
          , "expr": {"type": "var", "name": "USE_SHA1", "default": true}
          , "case":
            [ [ true, "CollisionDetection"]
            , [ "HTTPS",
                { "type": "case*"
                , "expr": {"type": "var", "name": "USE_HTTPS"}
                , "case":
                  [ ["SecureTransport", "CommonCrypto"]
                  , ["WinHTTP", "Win32"]
                  , [false, "CollisionDetection"]
                  , [null, "CollisionDetection"]
                  ]
                , "default": {"type": "var", "name": "USE_HTTPS"}
                }
              ]
            ]
          , "default": {"type": "var", "name": "USE_SHA1"}
          }
        ]
      ]
    , "body":
      { "type": "join"
      , "separator": "\n"
      , "$1":
        { "type": "++"
        , "$1":
          [ [ "#ifndef INCLUDE_features_h__"
            , "#define INCLUDE_features_h__"
            , ""
            ]
          , { "type": "if"
            , "cond": {"type": "var", "name": "DEBUG_POOL"}
            , "then": ["#define GIT_DEBUG_POOL 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "ENABLE_TRACE"}
            , "then": ["#define GIT_TRACE 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "THREADSAFE"}
            , "then": ["#define GIT_THREADS 1"]
            }
          , { "type": "if"
            , "cond":
              { "type": "=="
              , "$1":
                { "type": "var"
                , "name": "TARGET_ARCH"
                , "default": {"type": "var", "name": "ARCH"}
                }
              , "$2": "x86_64"
              }
            , "then": ["#define GIT_ARCH_64 1"]
            , "else": ["#define GIT_ARCH_32 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "USE_ICONV"}
            , "then": ["#define GIT_USE_ICONV 1"]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "USE_NSEC"}
            , "then":
              { "type": "++"
              , "$1":
                [ [ "#define GIT_USE_NSEC 1"
                  , "#define GIT_USE_FUTIMENS 1"
                  , "#define GIT_USE_STAT_MTIME_NSEC 1"
                  ]
                , { "type": "case*"
                  , "expr": {"type": "var", "name": "OS"}
                  , "case":
                    { "darwin": ["#define GIT_USE_STAT_MTIMESPEC 1"]
                    , "bsd": ["#define GIT_USE_STAT_MTIMESPEC 1"]
                    }
                  , "default": ["#define GIT_USE_STAT_MTIM 1"]
                  }
                ]
              }
            }
          , { "type": "case*"
            , "expr": {"type": "var", "name": "REGEX_BACKEND"}
            , "case":
              [ ["regcomp_l", ["#define GIT_REGEX_REGCOMP_L 1"]]
              ,   ["regcomp", ["#define GIT_REGEX_REGCOMP 1"]]
              ,      ["pcre", ["#define GIT_REGEX_PCRE 1"]]
              ,     ["pcre2", ["#define GIT_REGEX_PCRE2 1"]]
              ,   ["builtin", ["#define GIT_REGEX_BUILTIN 1"]]
              ,        [null, ["#define GIT_REGEX_BUILTIN 1"]]
              ]
            , "default":
              { "type": "fail"
              , "msg": "The REGEX_BACKEND option provided is not supported"
              }
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "USE_SSH"}
            , "then":
              [ "#define GIT_SSH 1"
              , "#define GIT_SSH_MEMORY_CREDENTIALS 1"
              ]
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "USE_NTLMCLIENT"}
            , "then": ["#define GIT_NTLM 1"]
            }
          , { "type": "case*"
            , "expr": {"type": "var", "name": "USE_GSSAPI"}
            , "case":
              [ ["GSS.framework", ["#define GIT_GSSFRAMEWORK 1"]]
              ,        ["gssapi", ["#define GIT_GSSAPI 1"]]
              ,           [false, []]
              ]
            , "default":
              { "type": "fail"
              , "msg": "Backend asked for in USE_GSSAPI is not supported"
              }
            }
          , { "type": "if"
            , "cond": {"type": "var", "name": "USE_HTTPS"}
            , "then":
              { "type": "++"
              , "$1":
                [ ["#define GIT_HTTPS 1"]
                , { "type": "case*"
                  , "expr": {"type": "var", "name": "USE_HTTPS"}
                  , "case":
                    [ [ "SecureTransport", ["#define GIT_SECURE_TRANSPORT 1"]]
                    ,         [ "OpenSSL", ["#define GIT_OPENSSL 1"]]
                    ,         [ "mbedTLS", ["#define GIT_MBEDTLS 1"]]
                    ,         [ "WinHTTP", ["#define GIT_WINHTTP 1"]]
                    ]
                  , "default":
                    { "type": "fail"
                    , "msg": "Backend asked for in USE_HTTPS is not supported"
                    }
                  }
                ]
              }
            }
          , { "type": "case*"
            , "expr": {"type": "var", "name": "USE_SHA1"}
            , "case":
              [ ["CollisionDetection", ["#define GIT_SHA1_COLLISIONDETECT 1"]]
              ,              ["Win32", ["#define GIT_SHA1_WIN32 1"]]
              ,       ["CommonCrypto", ["#define GIT_SHA1_COMMON_CRYPTO 1"]]
              ,            ["OpenSSL", ["#define GIT_SHA1_OPENSSL 1"]]
              ,            ["mbedTLS", ["#define GIT_SHA1_MBEDTLS 1"]]
              ]
            }
          , ["", "#endif", ""]
          ]
        }
      }
    }
  }
, "git2_public_headers":
  { "type": ["@", "rules", "CC", "header directory"]
  , "public stage": ["yes"]
  , "hdrs":
    [ "git2.h"
    , "git2/annotated_commit.h"
    , "git2/apply.h"
    , "git2/attr.h"
    , "git2/blame.h"
    , "git2/blob.h"
    , "git2/branch.h"
    , "git2/buffer.h"
    , "git2/cert.h"
    , "git2/checkout.h"
    , "git2/cherrypick.h"
    , "git2/clone.h"
    , "git2/commit.h"
    , "git2/common.h"
    , "git2/config.h"
    , "git2/credential.h"
    , "git2/credential_helpers.h"
    , "git2/cred_helpers.h"
    , "git2/deprecated.h"
    , "git2/describe.h"
    , "git2/diff.h"
    , "git2/errors.h"
    , "git2/filter.h"
    , "git2/global.h"
    , "git2/graph.h"
    , "git2/ignore.h"
    , "git2/indexer.h"
    , "git2/index.h"
    , "git2/mailmap.h"
    , "git2/merge.h"
    , "git2/message.h"
    , "git2/net.h"
    , "git2/notes.h"
    , "git2/object.h"
    , "git2/odb_backend.h"
    , "git2/odb.h"
    , "git2/oidarray.h"
    , "git2/oid.h"
    , "git2/pack.h"
    , "git2/patch.h"
    , "git2/pathspec.h"
    , "git2/proxy.h"
    , "git2/rebase.h"
    , "git2/refdb.h"
    , "git2/reflog.h"
    , "git2/refs.h"
    , "git2/refspec.h"
    , "git2/remote.h"
    , "git2/repository.h"
    , "git2/reset.h"
    , "git2/revert.h"
    , "git2/revparse.h"
    , "git2/revwalk.h"
    , "git2/signature.h"
    , "git2/stash.h"
    , "git2/status.h"
    , "git2/stdint.h"
    , "git2/strarray.h"
    , "git2/submodule.h"
    , "git2/tag.h"
    , "git2/trace.h"
    , "git2/transaction.h"
    , "git2/transport.h"
    , "git2/tree.h"
    , "git2/types.h"
    , "git2/version.h"
    , "git2/worktree.h"
    , "git2/sys/alloc.h"
    , "git2/sys/commit.h"
    , "git2/sys/config.h"
    , "git2/sys/credential.h"
    , "git2/sys/cred.h"
    , "git2/sys/diff.h"
    , "git2/sys/filter.h"
    , "git2/sys/hashsig.h"
    , "git2/sys/index.h"
    , "git2/sys/mempack.h"
    , "git2/sys/merge.h"
    , "git2/sys/odb_backend.h"
    , "git2/sys/openssl.h"
    , "git2/sys/path.h"
    , "git2/sys/refdb_backend.h"
    , "git2/sys/reflog.h"
    , "git2/sys/refs.h"
    , "git2/sys/repository.h"
    , "git2/sys/stream.h"
    , "git2/sys/transport.h"
    , "git2/sys/features.h"
    ]
  }
}
